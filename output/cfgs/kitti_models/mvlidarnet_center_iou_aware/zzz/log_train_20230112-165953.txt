2023-01-12 16:59:53,248   INFO  **********************Start logging**********************
2023-01-12 16:59:53,249   INFO  CUDA_VISIBLE_DEVICES=5
2023-01-12 16:59:53,249   INFO  cfg_file         ./cfgs/kitti_models/mvlidarnet_center_iou_aware.yaml
2023-01-12 16:59:53,250   INFO  use_same_seed    False
2023-01-12 16:59:53,251   INFO  batch_size       8
2023-01-12 16:59:53,251   INFO  epochs           90
2023-01-12 16:59:53,251   INFO  workers          8
2023-01-12 16:59:53,251   INFO  extra_tag        zzz
2023-01-12 16:59:53,252   INFO  ckpt             None
2023-01-12 16:59:53,252   INFO  pretrained_model None
2023-01-12 16:59:53,252   INFO  launcher         none
2023-01-12 16:59:53,253   INFO  tcp_port         18888
2023-01-12 16:59:53,253   INFO  sync_bn          False
2023-01-12 16:59:53,253   INFO  fix_random_seed  False
2023-01-12 16:59:53,253   INFO  ckpt_save_interval 1
2023-01-12 16:59:53,253   INFO  local_rank       0
2023-01-12 16:59:53,253   INFO  max_ckpt_save_num 30
2023-01-12 16:59:53,254   INFO  merge_all_iters_to_one_epoch False
2023-01-12 16:59:53,254   INFO  set_cfgs         None
2023-01-12 16:59:53,255   INFO  max_waiting_mins 0
2023-01-12 16:59:53,255   INFO  start_epoch      0
2023-01-12 16:59:53,255   INFO  num_epochs_to_eval 10
2023-01-12 16:59:53,256   INFO  save_to_file     False
2023-01-12 16:59:53,256   INFO  quantization     False
2023-01-12 16:59:53,256   INFO  cfg.ROOT_DIR: /home/duxuan/mvlidarnet_pcdet
2023-01-12 16:59:53,257   INFO  cfg.LOCAL_RANK: 0
2023-01-12 16:59:53,257   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2023-01-12 16:59:53,257   INFO  
cfg.DATA_CONFIG = edict()
2023-01-12 16:59:53,259   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2023-01-12 16:59:53,259   INFO  cfg.DATA_CONFIG.DATA_PATH: /data/duxuan/awnas/data/kitti/detection
2023-01-12 16:59:53,259   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2023-01-12 16:59:53,260   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2023-01-12 16:59:53,260   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2023-01-12 16:59:53,261   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2023-01-12 16:59:53,261   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2023-01-12 16:59:53,261   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2023-01-12 16:59:53,262   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2023-01-12 16:59:53,262   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2023-01-12 16:59:53,262   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2023-01-12 16:59:53,263   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2023-01-12 16:59:53,264   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2023-01-12 16:59:53,264   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2023-01-12 16:59:53,265   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2023-01-12 16:59:53,266   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2023-01-12 16:59:53,266   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2023-01-12 16:59:53,267   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2023-01-12 16:59:53,267   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_bev', 'VOXEL_SIZE': [0.16, 0.16, 4]}]
2023-01-12 16:59:53,268   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2023-01-12 16:59:53,305   INFO  
cfg.MODEL = edict()
2023-01-12 16:59:53,307   INFO  cfg.MODEL.NAME: CenterPoint
2023-01-12 16:59:53,308   INFO  
cfg.MODEL.VFE = edict()
2023-01-12 16:59:53,309   INFO  cfg.MODEL.VFE.NAME: PlaceHolderVFE
2023-01-12 16:59:53,310   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2023-01-12 16:59:53,311   INFO  cfg.MODEL.MAP_TO_BEV.NAME: BEV_mvlidarnet
2023-01-12 16:59:53,312   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 3
2023-01-12 16:59:53,313   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2023-01-12 16:59:53,314   INFO  cfg.MODEL.BACKBONE_2D.NAME: Standalone_MVLidarNet
2023-01-12 16:59:53,315   INFO  cfg.MODEL.BACKBONE_2D.MULTI_INPUT_CHANNELS: [3, 7]
2023-01-12 16:59:53,317   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [24, 48, 96, 192, 384, 128]
2023-01-12 16:59:53,318   INFO  cfg.MODEL.BACKBONE_2D.ratio: [0.5, 1.0, 1.0, 0.125, 0.25, 0.5]
2023-01-12 16:59:53,318   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2023-01-12 16:59:53,319   INFO  cfg.MODEL.DENSE_HEAD.NAME: CenterHead
2023-01-12 16:59:53,320   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.CLASS_NAMES_EACH_HEAD: [['Car', 'Pedestrian', 'Cyclist']]
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SHARED_CONV_CHANNEL: 64
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.USE_BIAS_BEFORE_NORM: True
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.NUM_HM_CONV: 2
2023-01-12 16:59:53,321   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG = edict()
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_ORDER: ['center', 'center_z', 'dim', 'rot', 'iou']
2023-01-12 16:59:53,321   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT = edict()
2023-01-12 16:59:53,321   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center = edict()
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.out_channels: 2
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.num_conv: 2
2023-01-12 16:59:53,321   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z = edict()
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.out_channels: 1
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.num_conv: 2
2023-01-12 16:59:53,321   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim = edict()
2023-01-12 16:59:53,321   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.out_channels: 3
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.num_conv: 2
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot = edict()
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.out_channels: 2
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.num_conv: 2
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.iou = edict()
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.iou.out_channels: 1
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.iou.num_conv: 2
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.FEATURE_MAP_STRIDE: 4
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NUM_MAX_OBJS: 500
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.GAUSSIAN_OVERLAP: 0.1
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MIN_RADIUS: 2
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.LABEL_ASSIGN_FLAG: v2
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING = edict()
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POSTPROCESS_TYPE: nms
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.SCORE_THRESH: 0.1
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POST_CENTER_LIMIT_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2023-01-12 16:59:53,322   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.MAX_OBJ_PER_SAMPLE: 500
2023-01-12 16:59:53,322   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG = edict()
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.7
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.IOU_LOSS_TYPE: GIOU_3D
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.IOU_WEIGHT: 1
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.WITH_IOU_AWARE_LOSS: True
2023-01-12 16:59:53,323   INFO  cfg.MODEL.DENSE_HEAD.IOU_AWARE_WEIGHT: 1
2023-01-12 16:59:53,323   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.01
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2023-01-12 16:59:53,323   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-01-12 16:59:53,323   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-01-12 16:59:53,323   INFO  
cfg.OPTIMIZATION = edict()
2023-01-12 16:59:53,323   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 16
2023-01-12 16:59:53,323   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 90
2023-01-12 16:59:53,323   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2023-01-12 16:59:53,323   INFO  cfg.OPTIMIZATION.LR: 0.003
2023-01-12 16:59:53,323   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2023-01-12 16:59:53,324   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2023-01-12 16:59:53,324   INFO  cfg.TAG: mvlidarnet_center_iou_aware
2023-01-12 16:59:53,324   INFO  cfg.EXP_GROUP_PATH: cfgs/kitti_models
2023-01-12 16:59:54,162   INFO  Database filter by min points Car: 14357 => 13532
2023-01-12 16:59:54,175   INFO  Database filter by min points Pedestrian: 2207 => 2168
2023-01-12 16:59:54,177   INFO  Database filter by min points Cyclist: 734 => 705
2023-01-12 16:59:54,276   INFO  Database filter by difficulty Car: 13532 => 10759
2023-01-12 16:59:54,294   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2023-01-12 16:59:54,305   INFO  Database filter by difficulty Cyclist: 705 => 581
2023-01-12 16:59:54,325   INFO  Loading KITTI dataset
2023-01-12 16:59:54,849   INFO  Total samples for KITTI dataset: 3712
2023-01-12 17:00:10,321   INFO  CenterPoint(
  (vfe): PlaceHolderVFE()
  (backbone_3d): None
  (map_to_bev_module): BEV_mvlidarnet()
  (pfe): None
  (backbone_2d): Standalone_MVLidarNet(
    (height): Sequential(
      (0): Sequential(
        (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): Sequential(
        (0): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (3): Sequential(
        (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (block1a): Sequential(
      (0): Conv2d(48, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block1b): Sequential(
      (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block2a): Sequential(
      (0): Conv2d(96, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block2b): Sequential(
      (0): Conv2d(24, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block3a): Sequential(
      (0): Conv2d(24, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block3b): Sequential(
      (0): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up1a): Sequential(
      (0): ConvTranspose2d(96, 24, kernel_size=(2, 2), stride=(2, 2), bias=False)
      (1): BatchNorm2d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up1c): Sequential(
      (0): Conv2d(48, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up2a): Sequential(
      (0): ConvTranspose2d(96, 96, kernel_size=(2, 2), stride=(2, 2), bias=False)
      (1): BatchNorm2d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up2c): Sequential(
      (0): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (dense_head): CenterHead(
    (shared_conv): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (heads_list): ModuleList(
      (0): SeparateHead(
        (center): Sequential(
          (0): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (center_z): Sequential(
          (0): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (dim): Sequential(
          (0): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (rot): Sequential(
          (0): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (iou): Sequential(
          (0): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (hm): Sequential(
          (0): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (hm_loss_func): FocalLossCenterNet()
    (reg_loss_func): RegLossCenterNet()
    (iou_aware_loss_func): RegLossCenterNet()
  )
  (point_head): None
  (roi_head): None
)
2023-01-12 17:00:10,379   INFO  **********************Start training cfgs/kitti_models/mvlidarnet_center_iou_aware(zzz)**********************
