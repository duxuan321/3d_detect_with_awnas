2023-01-11 14:57:35,682   INFO  **********************Start logging**********************
2023-01-11 14:57:35,683   INFO  CUDA_VISIBLE_DEVICES=2
2023-01-11 14:57:35,683   INFO  cfg_file         cfgs/kitti_models/pointpillar_bev_free_iou_aware.yaml
2023-01-11 14:57:35,683   INFO  sample_num       None
2023-01-11 14:57:35,683   INFO  batch_size       4
2023-01-11 14:57:35,683   INFO  workers          4
2023-01-11 14:57:35,683   INFO  extra_tag        default
2023-01-11 14:57:35,683   INFO  ckpt             ../output/cfgs/kitti_models/pointpillar_bev_free_iou_aware/each_layer_dynamic_deblock_norm/ckpt/checkpoint_epoch_110.pth
2023-01-11 14:57:35,683   INFO  launcher         none
2023-01-11 14:57:35,684   INFO  tcp_port         18888
2023-01-11 14:57:35,684   INFO  local_rank       0
2023-01-11 14:57:35,684   INFO  set_cfgs         None
2023-01-11 14:57:35,684   INFO  max_waiting_mins 30
2023-01-11 14:57:35,684   INFO  start_epoch      0
2023-01-11 14:57:35,684   INFO  eval_tag         default
2023-01-11 14:57:35,684   INFO  eval_all         False
2023-01-11 14:57:35,684   INFO  ckpt_dir         None
2023-01-11 14:57:35,684   INFO  save_to_file     False
2023-01-11 14:57:35,685   INFO  yaml_file_path   None
2023-01-11 14:57:35,685   INFO  controller_samples 70
2023-01-11 14:57:35,685   INFO  epoch_num        10
2023-01-11 14:57:35,685   INFO  cfg.ROOT_DIR: /home/duxuan/mvlidarnet_pcdet
2023-01-11 14:57:35,685   INFO  cfg.LOCAL_RANK: 0
2023-01-11 14:57:35,685   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2023-01-11 14:57:35,685   INFO  
cfg.DATA_CONFIG = edict()
2023-01-11 14:57:35,685   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2023-01-11 14:57:35,685   INFO  cfg.DATA_CONFIG.DATA_PATH: /data/duxuan/awnas/data/kitti/detection
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2023-01-11 14:57:35,686   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2023-01-11 14:57:35,686   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2023-01-11 14:57:35,686   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2023-01-11 14:57:35,687   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2023-01-11 14:57:35,687   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2023-01-11 14:57:35,687   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2023-01-11 14:57:35,687   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2023-01-11 14:57:35,687   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2023-01-11 14:57:35,687   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2023-01-11 14:57:35,687   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2023-01-11 14:57:35,687   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_bev', 'VOXEL_SIZE': [0.16, 0.16, 4]}]
2023-01-11 14:57:35,688   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2023-01-11 14:57:35,688   INFO  
cfg.MODEL = edict()
2023-01-11 14:57:35,688   INFO  cfg.MODEL.NAME: CenterPoint
2023-01-11 14:57:35,688   INFO  
cfg.MODEL.VFE = edict()
2023-01-11 14:57:35,688   INFO  cfg.MODEL.VFE.NAME: PlaceHolderVFE
2023-01-11 14:57:35,688   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2023-01-11 14:57:35,688   INFO  cfg.MODEL.MAP_TO_BEV.NAME: BEV_mvlidarnet
2023-01-11 14:57:35,688   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 3
2023-01-11 14:57:35,689   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.ratio: [1.0, 1.0, 0.5, 1.0, 1, 0.5, 0.5, 0.5, 1, 0.25, 1.0, 0.25, 1, 1, 1.0, 0.25]
2023-01-11 14:57:35,689   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2023-01-11 14:57:35,689   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.NAME: CenterHead
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.CLASS_NAMES_EACH_HEAD: [['Car', 'Pedestrian', 'Cyclist']]
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.SHARED_CONV_CHANNEL: 64
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.USE_BIAS_BEFORE_NORM: True
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.NUM_HM_CONV: 2
2023-01-11 14:57:35,690   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG = edict()
2023-01-11 14:57:35,690   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_ORDER: ['center', 'center_z', 'dim', 'rot', 'iou']
2023-01-11 14:57:35,691   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT = edict()
2023-01-11 14:57:35,691   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center = edict()
2023-01-11 14:57:35,691   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.out_channels: 2
2023-01-11 14:57:35,691   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.num_conv: 2
2023-01-11 14:57:35,691   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z = edict()
2023-01-11 14:57:35,691   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.out_channels: 1
2023-01-11 14:57:35,691   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.num_conv: 2
2023-01-11 14:57:35,691   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim = edict()
2023-01-11 14:57:35,691   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.out_channels: 3
2023-01-11 14:57:35,691   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.num_conv: 2
2023-01-11 14:57:35,692   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot = edict()
2023-01-11 14:57:35,692   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.out_channels: 2
2023-01-11 14:57:35,692   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.num_conv: 2
2023-01-11 14:57:35,692   INFO  
cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.iou = edict()
2023-01-11 14:57:35,692   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.iou.out_channels: 1
2023-01-11 14:57:35,692   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.iou.num_conv: 2
2023-01-11 14:57:35,692   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2023-01-11 14:57:35,692   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.FEATURE_MAP_STRIDE: 2
2023-01-11 14:57:35,692   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NUM_MAX_OBJS: 500
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.GAUSSIAN_OVERLAP: 0.1
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MIN_RADIUS: 2
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.LABEL_ASSIGN_FLAG: v2
2023-01-11 14:57:35,693   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2023-01-11 14:57:35,693   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-01-11 14:57:35,693   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING = edict()
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POSTPROCESS_TYPE: nms
2023-01-11 14:57:35,693   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.SCORE_THRESH: 0.1
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POST_CENTER_LIMIT_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.MAX_OBJ_PER_SAMPLE: 500
2023-01-11 14:57:35,694   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG = edict()
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.7
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.WITH_IOU_LOSS: True
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.IOU_LOSS_TYPE: GIOU_3D
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.IOU_WEIGHT: 1
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.WITH_IOU_AWARE_LOSS: True
2023-01-11 14:57:35,694   INFO  cfg.MODEL.DENSE_HEAD.IOU_AWARE_WEIGHT: 1
2023-01-11 14:57:35,695   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.01
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2023-01-11 14:57:35,695   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-01-11 14:57:35,695   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-01-11 14:57:35,695   INFO  
cfg.OPTIMIZATION = edict()
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 110
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.LR: 0.003
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2023-01-11 14:57:35,696   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2023-01-11 14:57:35,697   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2023-01-11 14:57:35,697   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2023-01-11 14:57:35,697   INFO  cfg.TAG: pointpillar_bev_free_iou_aware
2023-01-11 14:57:35,697   INFO  cfg.EXP_GROUP_PATH: kitti_models
2023-01-11 14:57:35,699   INFO  Loading KITTI dataset
2023-01-11 14:57:35,803   INFO  Total samples for KITTI dataset: 3769
2023-01-11 14:57:39,531   INFO  ==> Loading parameters from checkpoint ../output/cfgs/kitti_models/pointpillar_bev_free_iou_aware/each_layer_dynamic_deblock_norm/ckpt/checkpoint_epoch_110.pth to GPU
2023-01-11 14:57:39,656   INFO  ==> Checkpoint trained from version: pcdet+0.5.2+9fa8c15+pyd6df7b1
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.1.weight: torch.Size([64, 3, 3, 3])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.2.weight: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.2.bias: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.2.running_mean: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.2.running_var: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.2.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.4.weight: torch.Size([64, 64, 3, 3])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.5.weight: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.5.bias: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.5.running_mean: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.5.running_var: torch.Size([64])
2023-01-11 14:57:39,689   INFO  Not updated weight backbone_2d.blocks.0.5.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.7.weight: torch.Size([32, 64, 3, 3])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.8.weight: torch.Size([32])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.8.bias: torch.Size([32])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.8.running_mean: torch.Size([32])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.8.running_var: torch.Size([32])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.8.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.10.weight: torch.Size([64, 32, 3, 3])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.11.weight: torch.Size([64])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.11.bias: torch.Size([64])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.11.running_mean: torch.Size([64])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.11.running_var: torch.Size([64])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.0.11.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.1.1.weight: torch.Size([128, 64, 3, 3])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.1.2.weight: torch.Size([128])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.1.2.bias: torch.Size([128])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.1.2.running_mean: torch.Size([128])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.1.2.running_var: torch.Size([128])
2023-01-11 14:57:39,690   INFO  Not updated weight backbone_2d.blocks.1.2.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.4.weight: torch.Size([64, 128, 3, 3])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.5.weight: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.5.bias: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.5.running_mean: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.5.running_var: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.5.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.7.weight: torch.Size([64, 64, 3, 3])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.8.weight: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.8.bias: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.8.running_mean: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.8.running_var: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.8.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.10.weight: torch.Size([64, 64, 3, 3])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.11.weight: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.11.bias: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.11.running_mean: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.11.running_var: torch.Size([64])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.11.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,691   INFO  Not updated weight backbone_2d.blocks.1.13.weight: torch.Size([128, 64, 3, 3])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.14.weight: torch.Size([128])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.14.bias: torch.Size([128])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.14.running_mean: torch.Size([128])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.14.running_var: torch.Size([128])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.14.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.16.weight: torch.Size([32, 128, 3, 3])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.17.weight: torch.Size([32])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.17.bias: torch.Size([32])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.17.running_mean: torch.Size([32])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.17.running_var: torch.Size([32])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.1.17.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.1.weight: torch.Size([256, 32, 3, 3])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.2.weight: torch.Size([256])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.2.bias: torch.Size([256])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.2.running_mean: torch.Size([256])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.2.running_var: torch.Size([256])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.2.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.4.weight: torch.Size([64, 256, 3, 3])
2023-01-11 14:57:39,692   INFO  Not updated weight backbone_2d.blocks.2.5.weight: torch.Size([64])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.5.bias: torch.Size([64])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.5.running_mean: torch.Size([64])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.5.running_var: torch.Size([64])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.5.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.7.weight: torch.Size([256, 64, 3, 3])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.8.weight: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.8.bias: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.8.running_mean: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.8.running_var: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.8.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.10.weight: torch.Size([256, 256, 3, 3])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.11.weight: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.11.bias: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.11.running_mean: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.11.running_var: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.11.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.13.weight: torch.Size([256, 256, 3, 3])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.14.weight: torch.Size([256])
2023-01-11 14:57:39,693   INFO  Not updated weight backbone_2d.blocks.2.14.bias: torch.Size([256])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.14.running_mean: torch.Size([256])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.14.running_var: torch.Size([256])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.14.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.16.weight: torch.Size([64, 256, 3, 3])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.17.weight: torch.Size([64])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.17.bias: torch.Size([64])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.17.running_mean: torch.Size([64])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.17.running_var: torch.Size([64])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.blocks.2.17.num_batches_tracked: torch.Size([])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.deblocks.1.0.weight: torch.Size([32, 128, 2, 2])
2023-01-11 14:57:39,694   INFO  Not updated weight backbone_2d.deblocks.2.0.weight: torch.Size([64, 128, 4, 4])
2023-01-11 14:57:39,694   INFO  ==> Done (loaded 78/176)
